// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = "postgres://default:9tifsAY8CymN@ep-summer-snowflake-a4h9elr4-pooler.us-east-1.aws.neon.tech/verceldb?pgbouncer=true&connect_timeout=15&sslmode=require" // uses connection pooling
    directUrl = "postgres://default:9tifsAY8CymN@ep-summer-snowflake-a4h9elr4.us-east-1.aws.neon.tech/verceldb?sslmode=require" // uses a direct connection
    // url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// model Post {
//     id        String  @id @default(cuid())
//     title     String
//     content   String?
//     published Boolean @default(false)
//     author    User?   @relation(fields: [authorId], references: [id])
//     authorId  String?
// }

model User {
    id        String   @id @default(cuid())
    name      String?
    email     String   @unique
    phone     String   @unique
    role      String
    password  String
    isActive  Boolean  @default(false)
    createdAt DateTime @default(now()) @map(name: "created_at")
    updatedAt DateTime @updatedAt @map(name: "updated_at")

    @@map(name: "users")
}

// Commmands to run at end
// 1. npx prisma db push
// 1. npm prisma studio
// 1. npm prisma generate -especialy to generate the prisma client 
